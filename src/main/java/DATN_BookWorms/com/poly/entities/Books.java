/*
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.poly.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * JPA entity class for "Books"
 *
 * @author Telosys
 *
 */
@NoArgsConstructor
@AllArgsConstructor
@Data
@Entity
@Table(name="Books", schema="dbo", catalog="BookWorm" )
public class Books implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="BookId", nullable=false)
    private Integer    bookid ;

    //--- ENTITY DATA FIELDS 
    @Column(name="BookName", nullable=false, length=100)
    private String     bookname ;

    @Column(name="Language", length=20)
    private String     language ;

    @Column(name="Size", length=20)
    private String     size ;

    @Column(name="Weight")
    private Double     weight ;

    @Column(name="TotalPage")
    private Integer    totalpage ;

    @Column(name="PublishingYear")
    private Integer    publishingyear ;

    @Column(name="Price")
    private Double     price ;

    @Column(name="Quantity")
    private Integer    quantity ;

    @Column(name="Statues", length=20)
    private String     statues ;

    @Column(name="PublishingCompanyId", nullable=false)
    private Integer    publishingcompanyid ;

    @Column(name="isActive")
    private Boolean    isactive ;

    @Column(name="QuantitySold")
    private Integer    quantitysold ;

    @Column(name="ShopId", nullable=false)
    private Integer    shopid ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany(mappedBy="books")
    private List<Cart> listOfCart ; 

    @ManyToOne
    @JoinColumn(name="ShopId", referencedColumnName="ShopId", insertable=false, updatable=false)
    private Shoponlines shoponlines ; 

    @OneToMany(mappedBy="books")
    private List<Imagebooks> listOfImagebooks ; 

    @OneToMany(mappedBy="books")
    private List<Detailbookings> listOfDetailbookings ; 

    @OneToMany(mappedBy="books")
    private List<Typebooks> listOfTypebooks ; 

    @OneToMany(mappedBy="books")
    private List<Writers> listOfWriters ; 

    @ManyToOne
    @JoinColumn(name="PublishingCompanyId", referencedColumnName="PCId", insertable=false, updatable=false)
    private Publishingcompanies publishingcompanies ; 

    @OneToMany(mappedBy="books")
    private List<Hassales> listOfHassales ; 


    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(bookid);
        sb.append("|");
        sb.append(bookname);
        sb.append("|");
        sb.append(language);
        sb.append("|");
        sb.append(size);
        sb.append("|");
        sb.append(weight);
        sb.append("|");
        sb.append(totalpage);
        sb.append("|");
        sb.append(publishingyear);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(quantity);
        sb.append("|");
        sb.append(statues);
        sb.append("|");
        sb.append(publishingcompanyid);
        sb.append("|");
        sb.append(isactive);
        sb.append("|");
        sb.append(quantitysold);
        sb.append("|");
        sb.append(shopid);
        return sb.toString(); 
    } 

}
